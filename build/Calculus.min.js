!function(){var a=nerdamer.getCore(),b=a.PARSER,c=a.Utils.isSymbol,d=a.groups.FN,e=a.Symbol,f=a.Utils.text,g=a.Utils.inBrackets,h=a.groups.N,i=a.groups.S,d=a.groups.FN,j=a.groups.PL,k=a.groups.CP,l=a.groups.CB,m=a.groups.EX,n=a.Calculus={version:"1.0.0",sum:function(c,d,g,h){if(d.group!==a.groups.S)throw new Error("Index must be symbol. "+f(d)+" provided");d=d.value;var i;if(a.Utils.isNumericSymbol(g)&&a.Utils.isNumericSymbol(h)){g=g.multiplier,h=h.multiplier;var j=a.Utils.variables(c);if(1===j.length&&d===j[0]){var k=a.Utils.build(c);i=0;for(var l=g;h>=l;l++)i+=k.call(void 0,l)}else for(var k=c.text(),m={"~":!0},i=new a.Symbol(0),l=g;h>=l;l++)m[d]=new e(l),i=b.add(i,b.parse(k,m))}else i=b.symfunction("sum",arguments);return i},diff:function(o,p,q){function r(a){return(a.value===v||a.contains(v,!0))&&(a.multiplier*=a.power,a.power-=1,0===a.power&&(a=e(a.multiplier))),a}function s(a){var o,p,q,w=a.group;if(w===h||w===i&&a.value!==v)a=e(0);else if(w===i)a=r(a);else{if(w===l){var x=a.multiplier;a.multiplier=1;var y=b.multiply(u(a),r(a.copy()));return y.multiplier*=x,y}if(w===d&&1===a.power)switch(a.baseName){case"log":q=a.copy(),a=a.args[0].copy(),c(a.power)?a.power=b.multiply(a.power,e(-1)):a.power*=-1,a.multiplier=q.multiplier/a.multiplier;break;case"cos":a.baseName="sin",a.multiplier*=-1;break;case"sin":a.baseName="cos";break;case"tan":a.baseName="sec",a.power=2;break;case"sec":a=t(a,"tan");break;case"csc":a=t(a,"-cot");break;case"cot":a.baseName="csc",a.multiplier*=-1,a.power=2;break;case"asin":a=b.parse("(sqrt(1-("+f(a.args[0])+")^2))^(-1)");break;case"acos":a=b.parse("-(sqrt(1-("+f(a.args[0])+")^2))^(-1)");break;case"atan":a=b.parse("(1+("+f(a.args[0])+")^2)^(-1)");break;case"abs":x=a.multiplier,a.multiplier=1,p=a.args[0].copy(),p.multiplier=1,a=b.parse(g(f(a.args[0]))+"/abs"+g(f(p))),a.multiplier=x;break;case"parens":a=e(1)}else if(w===m||w===d&&c(a.power)){var z;z=w===m?a.value:w===d&&a.contains(v)?a.baseName+g(f(a.args[0])):a.value+g(f(a.args[0])),o=b.multiply(b.parse("log"+g(z)),a.power.copy()),p=n.diff(b.multiply(b.parse("log"+g(z)),a.power.copy()),v),a=b.multiply(a,p)}else if(w===d&&1!==a.power)p=a.copy(),p.power=1,p.multiplier=1,a=b.multiply(r(a.copy(),v),s(p));else if(w===k||w===j){var A=new e(0);for(var B in a.symbols)A=b.add(A,n.diff(a.symbols[B].copy(),v));a=b.multiply(r(a.copy()),A)}}return a.updateHash(),a}function t(a,c,d){return b.multiply(a,b.parse(c+g(d||f(a.args[0]))))}function u(a){for(var c=a.collectSymbols(),d=new e(0),f=c.length,g=0;f>g;g++){for(var h=n.diff(c[g].copy(),v),i=0;f>i;i++)g!==i&&(h=b.multiply(h,c[i].copy()));d=b.add(d,h)}return d}var v=c(p)?p.text():p;if(q=c(q)?q.multiplier:q||1,void 0===v&&(v=a.Utils.variables(o)[0]),o.group!==d||c(o.power))o=s(o);else{var w=s(o),x=n.diff(o.args[0].copy(),v);o=b.multiply(w,x)}return q>1&&(q--,o=n.diff(o,p,q)),o}};nerdamer.register([{name:"diff",visible:!0,numargs:[1,3],build:function(){return n.diff}},{name:"differentiate",visible:!0,numargs:[1,3],build:function(){return n.diff}},{name:"sum",visible:!0,numargs:4,build:function(){return n.sum}}])}();
