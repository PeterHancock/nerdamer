!function(){var a=nerdamer.getCore(),b=a.PARSER,c=(a.Utils.keys,a.Utils.build,a.Symbol),d=a.groups.S,e=(a.Utils.round,a.Utils.isInt,a.Math2,a.Utils.variables,a.Utils.isComposite,a.Utils.isSymbol,a.Utils.isNumericSymbol),f=a.Utils.eachaddsymbol,g=a.Utils.eachmuiltisymbol,h=a.Utils.isSingleVariable,i=a.Utils.hasVariable,j=a.Utils.joinmuiltisymbols,k=a.Utils.joinaddsymbols,l=(a.Utils.isVector,a.groups.N,a.groups.EX,a.groups.FN,a.groups.PL,a.groups.CP,a.groups.CB,a.Vector,a.Special={version:"1.0.1",delta:function(a){return e(a)?0==a?1/0:0:b.symfunction("delta",[a])},ft:function(m,n,o){if(!h(n)||!h(o))throw new Error("Must be single symbol");if(e(m)&&0===m.valueOf())return new c("0");var p=function(e,h,m){var n=g(e),o=[],q=[];if(n.forEach(function(a,b,c){i(a,h)?q.push(a):o.push(a)}),0===q.length)return b.multiply(e,b.symfunction("delta",[m]));var r=j(q);if(void 0!==r.args&&r.args.length>1,void 0!==r.args&&void 0!==r.args[0].baseName,void 0!==r.symbols){var s=void 0,t=[];if(-1!==r.text().indexOf("exp")&&g(r).forEach(function(a,b,c){"exp"===a.baseName?s=a:t.push(a)}),1===t.length&&(r=p(t[0],h.copy(),m.copy()),void 0!==s)){var u=f(r),v=b.parse(a.Utils.format("2*i*PI*({0})",h));s=a.Utils.format("(({0})-({1}))",m,b.divide(s.args[0],v)),u.forEach(function(a,c,d){var e=g(a);e.forEach(function(a,c,d){d[c]=b.parse(a.text().replace(m.text(),s))}),d[c]=j(e)}),o.push(k(u))}return j(o)}if(r.args[0].group!==d){if(1!==r.args[0].power,"sin"===r.baseName||"cos"===r.baseName){var w=f(r.args[0].copy());if("cos"===r.baseName){var x="0.5";w.forEach(function(b,c,d){x+=a.Utils.format("*(exp(i*({0})))",b)}),x+="+0.5",w.forEach(function(b,c,d){x+=a.Utils.format("*(exp((-i)*({0})))",b)}),o.push(l.ft(b.parse(x),h.copy(),m.copy()))}else{var x="0.5*(1/i)";w.forEach(function(b,c,d){x+=a.Utils.format("*(exp(i*({0})))",b)}),x+="-0.5*(1/i)",w.forEach(function(b,c,d){x+=a.Utils.format("*(exp((-i)*({0})))",b)}),o.push(l.ft(b.parse(x),h.copy(),m.copy()))}return j(o)}if(1!==r.args[0].multiplier||-1!==r.args[0].text().indexOf("i"))switch(r.baseName){case"exp":var v=a.Utils.format("2*i*PI*({0})",h),s=a.Utils.format("delta(({0})-({1}))",m,b.divide(r.args[0],b.parse(v)));o.push(b.parse(s))}else{var y=f(r.args[0].copy()),z=y.filter(function(a){return!i(a,h)}),A=a.Utils.format("exp(i*2*PI*f*({0}))",k(z));o.push(b.parse(A));var B=b.parse(r.text().replace(r.args[0].text(),h.text()));B=p(B,h.copy(),m.copy()),o.push(B)}return j(o)}if(1===r.power)switch(r.baseName){case"delta":r=new c("1");break;case"rect":r=b.symfunction("sinc",[m]);break;case"sinc":r=b.symfunction("rect",[m]);break;case"tri":r=b.pow(b.symfunction("sinc",[m]),new c("2"));break;case"sign":r=b.divide(new c("1"),b.multiply(b.multiply(new c("i"),new c("PI")),m));break;case"step":var x=a.Utils.format("0.5*((i*2*PI*{0})^(-1)+delta({0}))",m);r=b.parse(x);break;case"exp":var x=a.Utils.format("0.5*((i*2*PI*{0})^(-1)+delta({0}))",m);r=b.parse(x);break;case"cos":var x=a.Utils.format("0.5*delta(-0.5*PI^(-1)+{0})+0.5*delta(0.5*PI^(-1)+{0})",m);r=b.parse(x);break;case"sin":var x=a.Utils.format("-0.5*delta(0.5*PI^(-1)+{0})*i^(-1)+0.5*delta(-0.5*PI^(-1)+{0})*i^(-1)",m);r=b.parse(x)}else if(2===r.power)switch(r.baseName){case"sinc":r=b.symfunction("tri",[m])}return o.push(r),j(o)},q=a.Utils.format("expand({0})",m.copy());m=b.parse(q),m=nerdamer(m.text()).symbol;var r=f(m),s=[];return r.forEach(function(a,b,c){s.push(p(a,n.copy(),o.copy()))}),k(s)}});nerdamer.register([{name:"delta",visible:!0,numargs:1,build:function(){return l.delta}},{name:"ft",visible:!0,numargs:3,build:function(){return l.ft}}])}();
